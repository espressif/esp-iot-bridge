stages:
  - pre_check
  - build
  - deploy

# global variables
variables: &global-variables
  GIT_STRATEGY: clone
  PYTHON_VER: 3

.setup_esp_idf: &setup_esp_idf
  - image_str=${image}
  - image_str=(${image_str//:/ })
  - if [ -z "${idf_branch}" ]; then idf_branch=${image_str[1]}; fi
  - echo "idf_branch=${idf_branch}"
  - cd $IDF_PATH
  - git checkout ${idf_branch}
  - git submodule update --init --recursive
  - cd -

.before_script_preparation: &before_script_preparation
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - export IDF_PATH=/opt/esp/idf
  - python -m pip install --upgrade idf-component-manager

.build_iot_bridge_default: &build_iot_bridge_default
  - cd examples/wireless_nic
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_ETHERNET=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SPI=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

  - git checkout -- .
  - git clean -xdff
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_SPI=y" >> sdkconfig.defaults.${idf_target}
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_MODEM=y" >> sdkconfig.defaults.${idf_target}
  - echo -e "\nCONFIG_APP_BRIDGE_USE_WIFI_PROVISIONING_OVER_BLE=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

.build_iot_bridge_esp32: &build_iot_bridge_esp32
  - cd examples/wireless_nic
  - echo -e "\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SDIO=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

  - git checkout -- .
  - git clean -xdff
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_SDIO=y" >> sdkconfig.defaults.${idf_target}
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_ETHERNET=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

.build_iot_bridge_esp32s2: &build_iot_bridge_esp32s2
  - cd examples/wireless_nic
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_ETHERNET=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SPI=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

  - git checkout -- .
  - git clean -xdff
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_SPI=y" >> sdkconfig.defaults.${idf_target}
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_MODEM=y" >> sdkconfig.defaults.${idf_target}
  - echo -e "\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_USB=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

.build_iot_bridge_esp32s3: &build_iot_bridge_esp32s3
  - cd examples/wireless_nic
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_ETHERNET=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SPI=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

  - git checkout -- .
  - git clean -xdff
  - echo -e "\nCONFIG_APP_BRIDGE_USE_WIFI_PROVISIONING_OVER_BLE=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

  - git checkout -- .
  - git clean -xdff
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_SPI=y" >> sdkconfig.defaults.${idf_target}
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_MODEM=y" >> sdkconfig.defaults.${idf_target}
  - echo -e "\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_USB=y" >> sdkconfig.defaults.${idf_target}
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build

.build_wifi_router_examples: &build_wifi_router_examples
  - cd examples/wifi_router
  - rm -rf build sdkconfig
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build
  - cd -

.build_wireless_nic_examples: &build_wireless_nic_examples
  - cd examples/wireless_nic
  - rm -rf build sdkconfig
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build
  - cd -

.build_wired_nic_examples: &build_wired_nic_examples
  - cd examples/wired_nic
  - rm -rf build sdkconfig
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build
  - cd -

.build_4g_hotspot_examples: &build_4g_hotspot_examples
  - cd examples/4g_hotspot
  - rm -rf build sdkconfig
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build
  - cd -

.build_4g_nic_examples: &build_4g_nic_examples
  - cd examples/4g_nic
  - rm -rf build sdkconfig
  - idf.py ${compile_option} set-target ${idf_target}
  - idf.py build
  - cd -

.build_iot_bridge_examples: &build_iot_bridge_examples
  - *build_wifi_router_examples
  - *build_wireless_nic_examples
  - *build_wired_nic_examples
  - *build_4g_hotspot_examples
  - *build_4g_nic_examples

.pre_check_template:
  stage: pre_check
  image: python:3.9
  tags: ["build", "amd64", "internet"]
  needs: []

check_pre_commit:
  extends:
    - .pre_check_template
  before_script:
    - pip install pre-commit
  script:
    - pre-commit install --allow-missing-config -t pre-commit -t commit-msg
    - pre-commit run -a

esp32_build:
  stage: build

  tags:
    - build
  image: $IMAGE
  parallel:
    matrix:
      - IMAGE: ['espressif/idf:release-v5.0', 'espressif/idf:release-v5.1', 'espressif/idf:release-v5.2', 'espressif/idf:release-v5.3']

  variables:
    <<: *global-variables
    idf_target: esp32

  before_script:
    - *before_script_preparation

  script:
    - *setup_esp_idf
    - *build_iot_bridge_examples
    - *build_iot_bridge_esp32

esp32c2_build:
  stage: build
  tags:
    - build
  image: $IMAGE
  parallel:
    matrix:
      - IMAGE: ['espressif/idf:release-v5.0', 'espressif/idf:release-v5.1', 'espressif/idf:release-v5.2', 'espressif/idf:release-v5.3']

  variables:
    <<: *global-variables
    idf_target: esp32c2

  before_script:
    - *before_script_preparation

  script:
    - *setup_esp_idf
    - *build_iot_bridge_examples
    - *build_iot_bridge_default

esp32c3_build:
  stage: build
  tags:
    - build
  image: $IMAGE
  parallel:
    matrix:
      - IMAGE: ['espressif/idf:release-v5.0', 'espressif/idf:release-v5.1', 'espressif/idf:release-v5.2', 'espressif/idf:release-v5.3']

  variables:
    <<: *global-variables
    idf_target: esp32c3

  before_script:
    - *before_script_preparation

  script:
    - *setup_esp_idf
    - *build_iot_bridge_examples
    - *build_iot_bridge_default

esp32s2_build:
  stage: build
  tags:
    - build
  image: $IMAGE
  parallel:
    matrix:
      - IMAGE: ['espressif/idf:release-v5.0', 'espressif/idf:release-v5.1', 'espressif/idf:release-v5.2', 'espressif/idf:release-v5.3']

  variables:
    <<: *global-variables
    idf_target: esp32s2

  before_script:
    - *before_script_preparation

  script:
    - *setup_esp_idf
    - *build_iot_bridge_examples
    - *build_iot_bridge_esp32s2

esp32s3_build:
  stage: build
  tags:
    - build
  image: $IMAGE
  parallel:
    matrix:
      - IMAGE: ['espressif/idf:release-v5.0', 'espressif/idf:release-v5.1', 'espressif/idf:release-v5.2', 'espressif/idf:release-v5.3']

  variables:
    <<: *global-variables
    idf_target: esp32s3

  before_script:
    - *before_script_preparation

  script:
    - *setup_esp_idf
    - *build_iot_bridge_examples
    - *build_iot_bridge_esp32s3

esp32c6_build:
  stage: build
  tags:
    - build
  image: $IMAGE
  parallel:
    matrix:
      - IMAGE: ['espressif/idf:release-v5.1', 'espressif/idf:release-v5.2', 'espressif/idf:release-v5.3']

  variables:
    <<: *global-variables
    idf_target: esp32c6

  before_script:
    - *before_script_preparation

  script:
    - *setup_esp_idf
    - *build_iot_bridge_examples
    - *build_iot_bridge_default

esp32c5_build:
  stage: build
  tags:
    - build
  image: $IMAGE
  parallel:
    matrix:
      - IMAGE: ['espressif/idf:latest']

  variables:
    <<: *global-variables
    idf_branch: master
    idf_target: esp32c5
    compile_option: --preview

  before_script:
    - *before_script_preparation

  script:
    - *setup_esp_idf
    - *build_iot_bridge_examples
    - *build_iot_bridge_default

push_master_to_github:
  stage: deploy
  only:
    - master
#  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
    GITHUB_PUSH_REFS: refs/remotes/origin/release refs/remotes/origin/master
  before_script:
    - echo "skip default before_script"
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - if [ -d "components/iot_bridge/priv_src" ]; then exit 1; fi
    - git remote add github git@github.com:espressif/esp-iot-bridge.git
    - eval $(git for-each-ref --shell bash --format 'if [ $CI_COMMIT_SHA == %(objectname) ]; then git checkout -B %(refname:strip=3); git push --follow-tags github %(refname:strip=3); fi;' $GITHUB_PUSH_REFS)
